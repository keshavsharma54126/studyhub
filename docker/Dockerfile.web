FROM node:20-alpine AS base 

ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_LIVEKIT_API_KEY
ARG NEXT_PUBLIC_LIVEKIT_API_SECRET
ARG NEXT_PUBLIC_LIVEKIT_URL
ARG NEXT_PUBLIC_ACCESS_KEY_ID
ARG NEXT_PUBLIC_SECRET_ACCESS_KEY
ARG NEXT_PUBLIC_REGION
ARG NEXT_PUBLIC_BUCKET_NAME
ARG NEXT_PUBLIC_AWS_URL
ARG NEXT_PUBLIC_WS_URL
ARG FRONTEND_URL
ARG NEXT_PUBLIC_FRONTEND_URL

ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_LIVEKIT_API_KEY=${NEXT_PUBLIC_LIVEKIT_API_KEY}
ENV NEXT_PUBLIC_LIVEKIT_API_SECRET=${NEXT_PUBLIC_LIVEKIT_API_SECRET}
ENV NEXT_PUBLIC_LIVEKIT_URL=${NEXT_PUBLIC_LIVEKIT_URL}
ENV NEXT_PUBLIC_ACCESS_KEY_ID=${NEXT_PUBLIC_ACCESS_KEY_ID}
ENV NEXT_PUBLIC_SECRET_ACCESS_KEY=${NEXT_PUBLIC_SECRET_ACCESS_KEY}
ENV NEXT_PUBLIC_REGION=${NEXT_PUBLIC_REGION}
ENV NEXT_PUBLIC_BUCKET_NAME=${NEXT_PUBLIC_BUCKET_NAME}
ENV NEXT_PUBLIC_AWS_URL=${NEXT_PUBLIC_AWS_URL}
ENV NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
ENV FRONTEND_URL=${FRONTEND_URL}
ENV NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL}


RUN apk add --no-cache openssl

FROM base AS deps 
WORKDIR /app 

COPY package.json package-lock.json ./
COPY turbo.json ./
COPY packages/ui/package.json ./packages/ui/package.json
COPY packages/db/package.json ./packages/db/package.json
COPY apps/http-backend/package.json ./apps/http-backend/package.json
COPY apps/upload-worker/package.json ./apps/upload-worker/package.json
COPY apps/wsServer/package.json ./apps/wsServer/package.json
COPY apps/web/package.json ./apps/web/package.json

RUN npm install

FROM base AS builder 
WORKDIR /app 
COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN npm run db:generate

RUN npm run build


CMD ["npm", "run", "start-web"]
